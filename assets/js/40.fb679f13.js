(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{396:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第一章-快速入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一章-快速入门"}},[t._v("#")]),t._v(" 第一章 快速入门")]),t._v(" "),a("h2",{attrs:{id:"_1-1-tornado"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-tornado"}},[t._v("#")]),t._v(" 1.1 Tornado")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Tornado简介")]),t._v(" "),a("p",[t._v("Tornado 是一个python web框架和异步网络库，最初开发于 FriendFeed . 通过使用非阻塞网络I/O，Tornado可以扩展到数万个开放连接，使其非常适合 long polling ， WebSockets 以及其他需要与每个用户建立长期连接的应用程序。")]),t._v(" "),a("ul",[a("li",[t._v("简单应用")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一个简单的 《Hello, world》 Tornado 网页应用程序示例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" tornado"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ioloop\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" tornado"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("web\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MainHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tornado"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("web"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RequestHandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make_app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" tornado"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("web"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Application"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('r"/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MainHandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__main__"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" make_app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("listen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    tornado"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ioloop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IOLoop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("线程和WSGI")]),t._v(" "),a("p",[t._v("Tornado与大多数python Web框架不同。它不是基于 WSGI ，并且通常每个进程只运行一个线程。更多关于Tornado的异步编程方法。虽然在 "),a("code",[t._v("tornado.wsgi")]),t._v("模块，它不是开发的重点，大多数应用程序都应该使用Tornado自己的接口（例如 "),a("code",[t._v("tornado.web")]),t._v("）直接而不是使用wsgi。")]),t._v(" "),a("p",[t._v("通常，Tornado代码不是线程安全的。Tornado中唯一可以安全地从其他线程调用的方法是 IOLoop.add_callback . 您也可以使用 "),a("code",[t._v("IOLoop.run_in_executor")]),t._v(" 在另一个线程上异步运行阻塞函数，但请注意，传递给"),a("code",[t._v("run_in_executor")]),t._v("应避免引用任何 Tornado 对象。"),a("code",[t._v("run_in_executor")]),t._v("是与阻塞代码交互的推荐方法。")])])])]),t._v(" "),a("h2",{attrs:{id:"_1-2-环境和torando基本应用结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-环境和torando基本应用结构"}},[t._v("#")]),t._v(" 1.2 环境和torando基本应用结构")]),t._v(" "),a("h2",{attrs:{id:"_1-3-tornado构建restful应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-tornado构建restful应用"}},[t._v("#")]),t._v(" 1.3 Tornado构建RESTful应用")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("RESTful")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("什么是RESTful")]),t._v(" "),a("ul",[a("li",[t._v("全称：Representational State Transfer")]),t._v(" "),a("li",[t._v("是HTTP协议（1.0和1.1）的主要设计者Roy Thomas Fielding提出")]),t._v(" "),a("li",[t._v("资源（Resources） 表现层（Representational ）状态转化（State Transfer）\n是实现API的一种风格")])])]),t._v(" "),a("li",[a("p",[t._v("RESTful风格")]),t._v(" "),a("ul",[a("li",[t._v("Resources（资源）：使用URL指向一个实体，例如：网页是资源，媒体也是资源")]),t._v(" "),a("li",[t._v("Representational （表现层）：资源的表现形式，例如：图片，HTML文本等")]),t._v(" "),a("li",[t._v("State Transfer（状态转化）：GET, POST, PUT, DELETE HTTP动词操作资源")]),t._v(" "),a("li",[t._v("例如后端的增删改查，增删改查可以和http请求联系起来")])])]),t._v(" "),a("li",[a("p",[t._v("常用HTTP动词")]),t._v(" "),a("ul",[a("li",[t._v("RESTful解释：")]),t._v(" "),a("li",[t._v("GET, POST, PUT, DELETE 分别用来 获取，新建，更新，删除资源")]),t._v(" "),a("li",[t._v("幂等性：GET, PUT, DELETE")]),t._v(" "),a("li",[t._v("幂等性是指无论一次还是多次操作都具有一样的副作用")]),t._v(" "),a("li",[t._v("POST不具有幂等性，因为post每次都创建一个新的，")]),t._v(" "),a("li",[t._v("对于幂等性操作可以我们可以放心的发多次操作")]),t._v(" "),a("li",[t._v("对于非幂等性，我们需要在后台保证发送多次不会创建多次")])])]),t._v(" "),a("li",[a("p",[t._v("Tornado RESTful Api示例")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/TornadoRESTfulApi.png"),alt:"foo"}}),t._v(" "),a("ul",[a("li",[t._v("MVC框架\n"),a("ul",[a("li",[t._v("M:model表示操作数据库层")]),t._v(" "),a("li",[t._v("V:view表示视图层")]),t._v(" "),a("li",[t._v("C:controller 表示业务逻辑层")])])])])]),t._v(" "),a("li",[a("p",[t._v("实现Tornado RESTful Api")]),t._v(" "),a("ul",[a("li",[t._v("使用UserModel实现管理和数据库的交互")]),t._v(" "),a("li",[t._v("实现UserListRequestHandler,请求批量用户信息")]),t._v(" "),a("li",[t._v("实现UserRequestHandler，处理单个用户的增删改查")]),t._v(" "),a("li",[t._v("接口比较明确的时候，可以从底层开始写，就是当前的情况。")])])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);